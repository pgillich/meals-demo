// Code generated by go-swagger; DO NOT EDIT.

package meal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pgillich/meals-demo/internal/models"
)

// FindMealsByTagOKCode is the HTTP code returned for type FindMealsByTagOK
const FindMealsByTagOKCode int = 200

/*FindMealsByTagOK successful operation

swagger:response findMealsByTagOK
*/
type FindMealsByTagOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Meal `json:"body,omitempty"`
}

// NewFindMealsByTagOK creates FindMealsByTagOK with default headers values
func NewFindMealsByTagOK() *FindMealsByTagOK {

	return &FindMealsByTagOK{}
}

// WithPayload adds the payload to the find meals by tag o k response
func (o *FindMealsByTagOK) WithPayload(payload []*models.Meal) *FindMealsByTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find meals by tag o k response
func (o *FindMealsByTagOK) SetPayload(payload []*models.Meal) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindMealsByTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Meal, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FindMealsByTagInternalServerErrorCode is the HTTP code returned for type FindMealsByTagInternalServerError
const FindMealsByTagInternalServerErrorCode int = 500

/*FindMealsByTagInternalServerError Error

swagger:response findMealsByTagInternalServerError
*/
type FindMealsByTagInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewFindMealsByTagInternalServerError creates FindMealsByTagInternalServerError with default headers values
func NewFindMealsByTagInternalServerError() *FindMealsByTagInternalServerError {

	return &FindMealsByTagInternalServerError{}
}

// WithPayload adds the payload to the find meals by tag internal server error response
func (o *FindMealsByTagInternalServerError) WithPayload(payload *models.APIError) *FindMealsByTagInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find meals by tag internal server error response
func (o *FindMealsByTagInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindMealsByTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
