// Code generated by go-swagger; DO NOT EDIT.

package meal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pgillich/meals-demo/internal/models"
)

// CreateMealOKCode is the HTTP code returned for type CreateMealOK
const CreateMealOKCode int = 200

/*CreateMealOK successful operation

swagger:response createMealOK
*/
type CreateMealOK struct {

	/*
	  In: Body
	*/
	Payload *models.Meal `json:"body,omitempty"`
}

// NewCreateMealOK creates CreateMealOK with default headers values
func NewCreateMealOK() *CreateMealOK {

	return &CreateMealOK{}
}

// WithPayload adds the payload to the create meal o k response
func (o *CreateMealOK) WithPayload(payload *models.Meal) *CreateMealOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create meal o k response
func (o *CreateMealOK) SetPayload(payload *models.Meal) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateMealOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateMealInternalServerErrorCode is the HTTP code returned for type CreateMealInternalServerError
const CreateMealInternalServerErrorCode int = 500

/*CreateMealInternalServerError Error

swagger:response createMealInternalServerError
*/
type CreateMealInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewCreateMealInternalServerError creates CreateMealInternalServerError with default headers values
func NewCreateMealInternalServerError() *CreateMealInternalServerError {

	return &CreateMealInternalServerError{}
}

// WithPayload adds the payload to the create meal internal server error response
func (o *CreateMealInternalServerError) WithPayload(payload *models.APIError) *CreateMealInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create meal internal server error response
func (o *CreateMealInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateMealInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
