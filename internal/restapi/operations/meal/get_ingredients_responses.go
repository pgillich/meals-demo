// Code generated by go-swagger; DO NOT EDIT.

package meal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pgillich/meals-demo/internal/models"
)

// GetIngredientsOKCode is the HTTP code returned for type GetIngredientsOK
const GetIngredientsOKCode int = 200

/*GetIngredientsOK successful operation

swagger:response getIngredientsOK
*/
type GetIngredientsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Ingredient `json:"body,omitempty"`
}

// NewGetIngredientsOK creates GetIngredientsOK with default headers values
func NewGetIngredientsOK() *GetIngredientsOK {

	return &GetIngredientsOK{}
}

// WithPayload adds the payload to the get ingredients o k response
func (o *GetIngredientsOK) WithPayload(payload []*models.Ingredient) *GetIngredientsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ingredients o k response
func (o *GetIngredientsOK) SetPayload(payload []*models.Ingredient) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIngredientsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Ingredient, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetIngredientsInternalServerErrorCode is the HTTP code returned for type GetIngredientsInternalServerError
const GetIngredientsInternalServerErrorCode int = 500

/*GetIngredientsInternalServerError Invalid tag value

swagger:response getIngredientsInternalServerError
*/
type GetIngredientsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetIngredientsInternalServerError creates GetIngredientsInternalServerError with default headers values
func NewGetIngredientsInternalServerError() *GetIngredientsInternalServerError {

	return &GetIngredientsInternalServerError{}
}

// WithPayload adds the payload to the get ingredients internal server error response
func (o *GetIngredientsInternalServerError) WithPayload(payload *models.APIError) *GetIngredientsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ingredients internal server error response
func (o *GetIngredientsInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIngredientsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
