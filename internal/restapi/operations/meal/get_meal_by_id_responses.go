// Code generated by go-swagger; DO NOT EDIT.

package meal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pgillich/meals-demo/internal/models"
)

// GetMealByIDOKCode is the HTTP code returned for type GetMealByIDOK
const GetMealByIDOKCode int = 200

/*GetMealByIDOK successful operation

swagger:response getMealByIdOK
*/
type GetMealByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Meal `json:"body,omitempty"`
}

// NewGetMealByIDOK creates GetMealByIDOK with default headers values
func NewGetMealByIDOK() *GetMealByIDOK {

	return &GetMealByIDOK{}
}

// WithPayload adds the payload to the get meal by Id o k response
func (o *GetMealByIDOK) WithPayload(payload *models.Meal) *GetMealByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get meal by Id o k response
func (o *GetMealByIDOK) SetPayload(payload *models.Meal) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMealByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMealByIDInternalServerErrorCode is the HTTP code returned for type GetMealByIDInternalServerError
const GetMealByIDInternalServerErrorCode int = 500

/*GetMealByIDInternalServerError Error

swagger:response getMealByIdInternalServerError
*/
type GetMealByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetMealByIDInternalServerError creates GetMealByIDInternalServerError with default headers values
func NewGetMealByIDInternalServerError() *GetMealByIDInternalServerError {

	return &GetMealByIDInternalServerError{}
}

// WithPayload adds the payload to the get meal by Id internal server error response
func (o *GetMealByIDInternalServerError) WithPayload(payload *models.APIError) *GetMealByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get meal by Id internal server error response
func (o *GetMealByIDInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMealByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
